<!-- Copyright 2019 Benjamin Marstaller Licensed under the Apache License, 
	Version 2.0 (the "License"); you may not use this file except in compliance 
	with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.github.theyellow</groupId>
	<artifactId>pogorobot</artifactId>
	<version>1.1.1-SNAPSHOT</version>
	<name>pogorobot</name>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.8.RELEASE</version>
	</parent>

	<properties>
		<project-name>${project.name}</project-name>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<timestamp>${maven.build.timestamp}</timestamp>
		<maven.build.timestamp.format>yy-MM-dd-HHmm</maven.build.timestamp.format>
		<!-- <maven.build.timestamp.format>yyyy-MM-dd'T'HH-mm-ss</maven.build.timestamp.format> -->
		<!-- <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format> -->

		<!-- <dbunit.dataTypeFactoryName>org.dbunit.ext.mysql.MySqlDataTypeFactory</dbunit.dataTypeFactoryName> -->
		<!-- <hibernate.dialect>org.hibernate.dialect.PostgreSQL9Dialect</hibernate.dialect> -->
		<!-- <hibernate.dialect>org.hibernate.dialect.MySQL5Dialect</hibernate.dialect> -->
		<!-- <hibernate.dialect>org.hibernate.dialect.MySQLInnoDBDialect</hibernate.dialect> -->
		<!-- <hibernate-c3p0.version>5.2.12.Final</hibernate-c3p0.version> -->

		<db.name>telegramdb</db.name>
		<!-- Standard for development -->
		<db.type>postgresql</db.type>
		<dbunit.operation.type>CLEAN_INSERT</dbunit.operation.type>

		<liquibase-maven-plugin.version>3.6.3</liquibase-maven-plugin.version>

		<mysql.version>8.0.17</mysql.version>
		<postgresql.version>42.3.3</postgresql.version>
		<liquibase.hibernate.version>3.6</liquibase.hibernate.version>
		<hibernate5-ddl-maven-plugin.version>2.1.0</hibernate5-ddl-maven-plugin.version>

		<dockerfile-maven-version>1.4.13</dockerfile-maven-version>
		<docker.image.prefix>theyellow</docker.image.prefix>

		<telegrambots.version>5.0.1</telegrambots.version>
		<telegrambots-extensions.version>5.0.1</telegrambots-extensions.version>

		<javax.interceptor-api.version>1.2</javax.interceptor-api.version>

		<jsoup.version>1.10.3</jsoup.version>
		<protobuf-java.version>3.16.1</protobuf-java.version>
		<google-maps-services.version>0.2.6</google-maps-services.version>
		<openmap.version>5.1.15</openmap.version>
		<pogoprotos.version>2.38.5</pogoprotos.version>

		<selenium-override.version>3.141.59</selenium-override.version>
		<htmlunit-override.version>2.33.3</htmlunit-override.version>
		<!-- <skipTests>true</skipTests> -->
	</properties>

	<dependencies>

		<!-- springboot -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-properties-migrator</artifactId>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<groupId>com.vaadin.external.google</groupId>
					<artifactId>android-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- tag::actuator[] -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- end::actuator[] -->

		<!-- tag::tests[] -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>com.vaadin.external.google</groupId>
					<artifactId>android-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- end::tests[] -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- interceptor -->
		<dependency>
			<groupId>javax.interceptor</groupId>
			<artifactId>javax.interceptor-api</artifactId>
			<version>${javax.interceptor-api.version}</version>
		</dependency>

		<!-- telegram -->
		<dependency>
			<groupId>org.telegram</groupId>
			<artifactId>telegrambots</artifactId>
			<version>${telegrambots.version}</version>
		</dependency>
		<dependency>
			<groupId>org.telegram</groupId>
			<artifactId>telegrambotsextensions</artifactId>
			<version>${telegrambots-extensions.version}</version>
		</dependency>

		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>${jsoup.version}</version>
		</dependency>

		<!-- database -->




		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jpamodelgen</artifactId>
		</dependency>

		<!-- liquibase -->
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.liquibase.ext</groupId>
			<artifactId>liquibase-hibernate5</artifactId>
			<version>${liquibase.hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-maven-plugin</artifactId>
			<version>${liquibase-maven-plugin.version}</version>
			<type>maven-plugin</type>
		</dependency>
		<dependency>
			<groupId>de.jpdigital</groupId>
			<artifactId>hibernate5-ddl-maven-plugin</artifactId>
			<type>pom</type>
			<version>${hibernate5-ddl-maven-plugin.version}</version>
		</dependency>

		<!-- (google) maps -->
		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java</artifactId>
			<version>${protobuf-java.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.maps</groupId>
			<artifactId>google-maps-services</artifactId>
			<version>${google-maps-services.version}</version>
		</dependency>
		<dependency>
			<groupId>com.bbn</groupId>
			<artifactId>openmap</artifactId>
			<version>${openmap.version}</version>
		</dependency>

		<!-- selenium -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>${selenium-override.version}</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-api</artifactId>
			<version>${selenium-override.version}</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>htmlunit-driver</artifactId>
			<version>${htmlunit-override.version}</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>

		<dependency>
			<groupId>com.pokebattler</groupId>
			<artifactId>pogoprotos</artifactId>
			<version>${pogoprotos.version}</version>
		</dependency>

	</dependencies>

	<distributionManagement>
		<repository>
			<!-- local repo -->
			<id>target-repo</id>
			<name>Create in target directory for distribution</name>
			<url>file://${project.build.directory}/target-repo/</url>
		</repository>
	</distributionManagement>

	<build>
		<defaultGoal>install</defaultGoal>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>${basedir}</directory>
				<includes>
					<include>bintray-descriptor.json</include>
				</includes>
				<filtering>true</filtering>
				<targetPath>${basedir}/target/</targetPath>
			</resource>
		</resources>
		<filters>
			<filter>bintray-descriptor.json</filter>
		</filters>

		<plugins>
			<plugin>
				<groupId>org.bsc.maven</groupId>
				<artifactId>maven-processor-plugin</artifactId>
				<version>3.3.3</version>
				<executions>
					<execution>
						<id>process</id>
						<goals>
							<goal>process</goal>
						</goals>
						<phase>generate-sources</phase>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.hibernate</groupId>
						<artifactId>hibernate-jpamodelgen</artifactId>
						<version>1.2.0.Final</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<compilerArgument>-proc:none</compilerArgument>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<inherited>false</inherited>
				<configuration>
					<!-- <escapeString>\</escapeString> -->
					<!-- <outputDirectory>${basedir}/target</outputDirectory> -->
					<!-- <resources> -->
					<!-- <resource> -->
					<!-- <directory>${basedir}</directory> -->
					<!-- <include>bintray-descriptor.json</include> -->
					<!-- <filtering>true</filtering> -->
					<!-- </resource> -->
					<!-- </resources> -->
					<!-- <nonFilteredFileExtensions> -->
					<!-- <nonFilteredFileExtension>json</nonFilteredFileExtension> -->
					<!-- </nonFilteredFileExtensions> -->
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<classifier>exec</classifier>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<source>8</source>
							<failOnError>false</failOnError>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/repository.xml</descriptor>
						<descriptor>src/main/assembly/distribution.xml</descriptor>
					</descriptors>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>${dockerfile-maven-version}</version>
				<executions>
					<execution>
				    <id>default</id>
				    <goals>
<!-- 				      <goal>build</goal> -->
<!-- 				      <goal>push</goal> -->
				    </goals>
				  </execution>
				</executions>
				<!-- <executions> -->
				<!-- <execution> -->
				<!-- <id>id</id> -->
				<!-- <goals> -->
				<!-- <goal>build</goal> -->
				<!-- </goals> -->
				<!-- </execution> -->
				<!-- </executions> -->
				<configuration>
					<repository>${docker.image.prefix}/${project.artifactId}</repository>
					<!-- <tag>${project.version}</tag> -->
					<buildArgs>
						<JAR_FILE>${project.artifactId}-postgres-${project.version}-exec.jar</JAR_FILE>
					</buildArgs>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
			</plugin>

			<!-- <plugin> -->
			<!-- <groupId>com.spotify</groupId> -->
			<!-- <artifactId>dockerfile-maven-plugin</artifactId> -->
			<!-- <version>1.4.10</version> -->
			<!-- <configuration> -->
			<!-- <buildArgs>target/${project.artifactId}-${project.version}-exec.jar</buildArgs> -->
			<!-- <repository>${docker.image.prefix}/${project.artifactId}</repository> -->
			<!-- </configuration> -->
			<!-- </plugin> -->
			<!-- <plugin> -->
			<!-- <groupId>org.apache.maven.plugins</groupId> -->
			<!-- <artifactId>maven-dependency-plugin</artifactId> -->
			<!-- <executions> -->
			<!-- <execution> -->
			<!-- <id>unpack</id> -->
			<!-- <phase>deploy</phase> -->
			<!-- <goals> -->
			<!-- <goal>unpack</goal> -->
			<!-- </goals> -->
			<!-- <configuration> -->
			<!-- <artifactItems> -->
			<!-- <artifactItem> -->
			<!-- <groupId>${project.groupId}</groupId> -->
			<!-- <artifactId>${project.artifactId}</artifactId> -->
			<!-- <version>${project.version}</version> -->
			<!-- </artifactItem> -->
			<!-- </artifactItems> -->
			<!-- </configuration> -->
			<!-- </execution> -->
			<!-- </executions> -->
			<!-- </plugin> -->
		</plugins>
	</build>

	<profiles>

		<!-- Liquibase profiles -->

		<profile>
			<id>postgresql-settings</id>
			<properties>
				<db.type>postgresql</db.type>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.liquibase</groupId>
						<artifactId>liquibase-maven-plugin</artifactId>
						<version>${liquibase-maven-plugin.version}</version>
						<configuration>
							<skip>${skipTests}</skip>
							<propertyFile>target/classes/liquibase-diff-${db.type}.properties</propertyFile>
							<changeLogFile>target/classes/liquibase/datadir/db.${db.type}.changelog.xml</changeLogFile>
							<diffChangeLogFile>src/main/resources/liquibase/datadir/db-${db.type}-${timestamp}.changelog.xml</diffChangeLogFile>
							<logging>info</logging>
						</configuration>
						<executions>
							<!-- drop db before generating schema with hbm2ddl to avoid any inconsistencies 
								between changelog files and DATABASECHANGELOG table -->
							<execution>
								<id>drop-db</id>
								<phase>process-resources</phase>
								<!-- <phase>clean</phase> -->
								<goals>
									<goal>dropAll</goal>
								</goals>
								<configuration>
									<propertyFile>target/classes/liquibase/liquibase-${db.type}.properties</propertyFile>
									<changeLogFile>target/classes/liquibase/datadir/db.${db.type}.changelog.xml</changeLogFile>
								</configuration>
							</execution>
							<!-- mark db up-to-date in the DATABASECHANGELOG table after generating 
								schema with hbm2ddl so that no migration is executed -->
							<execution>
								<id>mark-db-up-to-date</id>
								<!-- <phase>test</phase> -->
								<phase>test-compile</phase>
								<goals>
									<goal>changelogSync</goal>
								</goals>
							</execution>
						</executions>

						<dependencies>
							<dependency>
								<groupId>org.postgresql</groupId>
								<artifactId>postgresql</artifactId>
								<version>${postgresql.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>


		<profile>
			<id>mysql-settings</id>
			<properties>
				<db.type>mysql</db.type>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.liquibase</groupId>
						<artifactId>liquibase-maven-plugin</artifactId>
						<version>${liquibase-maven-plugin.version}</version>
						<!-- <version>${liquibase.version}</version> -->
						<configuration>
							<skip>${skipTests}</skip>
							<propertyFile>target/classes/liquibase-diff-${db.type}.properties</propertyFile>
							<changeLogFile>target/classes/liquibase/datadir/db.${db.type}.changelog.xml</changeLogFile>
							<diffChangeLogFile>src/main/resources/liquibase/datadir/db-${db.type}-${timestamp}.changelog.xml</diffChangeLogFile>
							<logging>info</logging>
						</configuration>
						<executions>
							<!-- drop db before generating schema with hbm2ddl to avoid any inconsistencies 
								between changelog files and DATABASECHANGELOG table -->
							<execution>
								<id>drop-db</id>
								<phase>process-resources</phase>
								<!-- <phase>clean</phase> -->
								<goals>
									<goal>dropAll</goal>
								</goals>
								<configuration>
									<propertyFile>target/classes/liquibase/liquibase-${db.type}.properties</propertyFile>
									<changeLogFile>target/classes/liquibase/datadir/db.${db.type}.changelog.xml</changeLogFile>
								</configuration>
							</execution>
							<!-- mark db up-to-date in the DATABASECHANGELOG table after generating 
								schema with hbm2ddl so that no migration is executed -->
							<execution>
								<id>mark-db-up-to-date</id>
								<!-- <phase>test</phase> -->
								<phase>test-compile</phase>
								<goals>
									<goal>changelogSync</goal>
								</goals>
							</execution>
						</executions>

						<dependencies>
							<dependency>
								<groupId>mysql</groupId>
								<artifactId>mysql-connector-java</artifactId>
								<version>${mysql.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>


		<profile>
			<id>db-diff-postgresql</id>
			<properties>
				<db.type>postgresql</db.type>
			</properties>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<filtering>true</filtering>
					</resource>
					<resource>
						<directory>src/main/resources/liquibase</directory>
						<filtering>true</filtering>
					</resource>
				</resources>
				<plugins>
					<plugin>
						<groupId>org.liquibase</groupId>
						<artifactId>liquibase-maven-plugin</artifactId>
						<version>${liquibase-maven-plugin.version}</version>
						<!-- <version>${liquibase.version}</version> -->
						<configuration>
							<skip>${skipTests}</skip>
							<!-- <driverPropertiesFile>target/classes/jdbc-${db.type}.properties</driverPropertiesFile> -->
							<propertyFile>target/classes/liquibase-diff-${db.type}.properties</propertyFile>
							<changeLogFile>target/classes/liquibase/datadir/db.${db.type}.changelog.xml</changeLogFile>
							<diffChangeLogFile>src/main/resources/liquibase/datadir/db-${db.type}-${timestamp}.changelog.xml</diffChangeLogFile>
							<logging>info</logging>
						</configuration>
						<executions>
							<execution>
								<id>generate-db-prev</id>
								<phase>process-resources</phase>
								<goals>
									<goal>update</goal>
								</goals>
								<configuration>
									<dropFirst>true</dropFirst>
								</configuration>
							</execution>
							<execution>
								<id>generate-db-diff</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>diff</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.postgresql</groupId>
								<artifactId>postgresql</artifactId>
								<version>${postgresql.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>db-diff-mysql</id>
			<properties>
				<db.type>mysql</db.type>
			</properties>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<filtering>true</filtering>
					</resource>
					<resource>
						<directory>src/main/resources/liquibase</directory>
						<filtering>true</filtering>
					</resource>
				</resources>
				<plugins>
					<plugin>
						<groupId>org.liquibase</groupId>
						<artifactId>liquibase-maven-plugin</artifactId>
						<version>${liquibase.version}</version>
						<configuration>
							<propertyFile>target/classes/liquibase-diff-${db.type}.properties</propertyFile>
							<changeLogFile>target/classes/liquibase/datadir/db.${db.type}.changelog.xml</changeLogFile>
							<diffChangeLogFile>src/main/resources/liquibase/datadir/db-mysql-${timestamp}.changelog.xml</diffChangeLogFile>
							<logging>info</logging>
						</configuration>
						<executions>
							<execution>
								<id>generate-db-prev</id>
								<phase>process-resources</phase>
								<goals>
									<goal>update</goal>
								</goals>
								<configuration>
									<dropFirst>true</dropFirst>
								</configuration>
							</execution>
							<execution>
								<id>generate-db-diff</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>diff</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>mysql</groupId>
								<artifactId>mysql-connector-java</artifactId>
								<version>${mysql.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Profiles for different databases -->
		<profile>
			<id>mysql</id>
			<build>
				<finalName>${project.name}-mysql-${project.version}</finalName>
			</build>
			<dependencies>
				<dependency>
					<groupId>mysql</groupId>
					<artifactId>mysql-connector-java</artifactId>
					<version>${mysql.version}</version>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>postgres</id>
			<build>
				<finalName>${project.name}-postgres-${project.version}</finalName>
			</build>
			<activation>
	            <activeByDefault>true</activeByDefault>
	        </activation>
			<dependencies>
				<dependency>
					<groupId>org.postgresql</groupId>
					<artifactId>postgresql</artifactId>
					<version>${postgresql.version}</version>
				</dependency>
			</dependencies>
		</profile>
	</profiles>


	<repositories>
		<repository>
			<id>central</id>
			<name>Maven Repository Switchboard</name>
			<layout>default</layout>
			<url>https://repo1.maven.org/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>nuiton.release</id>
			<name>NuitonReleaseRepository</name>
			<url>https://nexus.nuiton.org/nexus/content/repositories/thirdparty</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
				<checksumPolicy>warn</checksumPolicy>
			</releases>
		</repository>

		<repository>
			<id>jcenter</id>
			<name>jCenterRepository</name>
			<url>https://jcenter.bintray.com/</url>
		</repository>

		<repository>
			<id>spring-repo</id>
			<name>Spring Repository</name>
			<url>https://repo.spring.io/release</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>spring repo</id>
			<url>https://repo.spring.io/release</url>
		</pluginRepository>
	</pluginRepositories>

	<licenses>
		<license>
			<name>The Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<!-- SCM configuration to GitHub Repo -->
	<scm>
		<connection>scm:git:git@github.com:theyellow/pogorobot.git</connection>
		<developerConnection>scm:git:git@github.com:theyellow/pogorobot.git</developerConnection>
		<url>scm:git:git@github.com:theyellow/pogorobot.git</url>
		<tag>HEAD</tag>
	</scm>

</project>
